@model TP_PWEB.Models.CriarProdutoViewModel

@{ ViewBag.Title = "Registar Novo Produto"; }
<br />
<h5>Novo Produto</h5>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Desativa e ativa a validação no lado do cliente mas é sempre validada pelo servidor!! (Para corrigir erro decimal asp net)*@
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control" } })
                @{ Html.EnableClientValidation(true); }
                @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.UnidadesEmStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnidadesEmStock, new { htmlAttributes = new { @class = "form-control", @min = 0 } })
                @Html.ValidationMessageFor(model => model.UnidadesEmStock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCategoria, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.IdCategoria, Model.Categorias, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-success" />
            </div>
        </div>
    </div>
    
    }
<div>
    @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")	
}
