@model IEnumerable<TP_PWEB.Models.ProdutoViewModel>

@{
	ViewBag.Title = "Catálogo de Produtos";
}
<h2>Catálogo de Produtos</h2>
@if (User.IsInRole("Empresa"))
{
	@Html.ActionLink("Registar Produto", "Create", null, new { @class = "btn btn-primary" })
}
else if (User.IsInRole("Cliente"))
{

	using (Html.BeginForm("Index", "Produtoes", FormMethod.Get))
	{
		<hr />
		<div class="form-horizontal">
			<div class="form-group">
				<label class="control-label col-md-2">Produto</label>
				<div class="col-md-10">
					<input name="produto" value="@ViewBag.Produto" class="form-control" />
				</div>
			</div>

			<div class="form-group">
				<label class="control-label col-md-2">Categoria</label>
				<div class="col-md-10">
					@Html.DropDownList("IdCategoria", null, htmlAttributes: new { @class = "form-control" })
				</div>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Pesquisar" class="btn btn-primary" />
			</div>
		</div>
	}
}
<br/><br/>
<table class="table">
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.NomeProduto)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Categoria)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Vendedor)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.EmStock)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Unidades)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Preco)
		</th>
		<th></th>
		<th></th>
	</tr>
	@if (Model.Count() == 0)
	{
		<tr>
			<td colspan="5">Não existem registos correspondentes aos critérios mencionados.</td>
		</tr>
	}
	@foreach (var item in Model)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.NomeProduto)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Categoria)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Vendedor)
			</td>
			<td>
				@if (item.EmStock)
				{
					<p style="color: green;">Sim</p>
				}
				else
				{
					<p style="color: red;">Não</p>
				}
			</td>
			<td>
				x @Html.DisplayFor(modelItem => item.Unidades)
			</td>
			@{
				if (item.PrecoPromocional != null)
				{
					<td>
						<del>@Html.DisplayFor(modelItem => item.Preco) </del> @Html.DisplayFor(modelItem => item.PrecoPromocional) (- @Html.DisplayFor(modelItem => item.Desconto) %)
					</td>
				}
				else
				{
					<td>
						@Html.DisplayFor(modelItem => item.Preco)
					</td>
				}
			}

			<td>
				@Html.ActionLink("Details", "Detalhes", new { id = item.IdProduto }, new { @class = "btn btn-default" })

				@if (User.IsInRole("Cliente") && item.EmStock)
				{
					@Html.ActionLink(
						linkText: "Adicionar ao carrinho",
						actionName: "AdicionarItem",
						controllerName: "Carrinho",
						routeValues: new
						{
							id = item.IdProduto
						},
						htmlAttributes: new
								{
							@class = "btn btn-primary"
						})
				}

				@if (User.IsInRole("Funcionario"))
				{
					if (item.PrecoPromocional != null)
					{
						@Html.ActionLink("Remover Promoção", "RemoverPromocao", new { id = item.IdPromocao }, new { @class = "btn btn-default" })
					}
					else
					{
						@Html.ActionLink("Criar Promoção", "CriarPromocao", new { id = item.IdProduto }, new { @class = "btn btn-default" })
					}
				}

				@if (User.IsInRole("Empresa"))
				{
					if (item.Apagado)
					{
						<span class="label-danger">Produto Apagado</span>
					}
					else
					{
						@Html.ActionLink("Editar", "Editar", new { id = item.IdProduto }, new { @class = "btn btn-default" })
						@Html.ActionLink("Apagar", "Apagar", new { id = item.IdProduto }, new { @class = "btn btn-default" })
					}

				}
			</td>
		</tr>
	}
</table>
